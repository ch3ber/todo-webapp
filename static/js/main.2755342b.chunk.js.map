{"version":3,"sources":["TodoContex/index.js","TodoContex/useLocalStorage.js","components/TodoCounter/index.js","components/TodoSearch/index.js","components/TodoList/index.js","components/TodoItem/index.js","components/CreateTodoButton/index.js","Modal/index.js","components/TodoForm/index.js","App/skeleton.js","App/AppUI.js","App/index.js","index.js"],"names":["TodoContex","React","createContext","TodoProvider","props","itemName","initialValue","useState","error","setError","loading","setLoading","item","setItem","useEffect","setTimeout","parsedItem","localStorageItem","localStorage","getItem","JSON","parse","stringify","saveItem","newItem","stringifiedItem","useLocalStorage","todos","saveTodos","searchValue","setSearchValue","openModal","setOpenModal","completedTodos","filter","todo","completed","length","totalTodos","searchedTodos","todoText","text","toLowerCase","searchText","includes","Provider","value","completeTodo","todoIndex","findIndex","newTodos","deleteTodo","splice","addTodo","push","toggleComplete","children","TodoCounter","useContext","className","TodoSearch","placeholder","onChange","event","console","log","target","TodoList","TodoItem","onClick","onDelete","fill","fontSize","CreateTodoButton","prevState","document","getElementById","classList","toggle","querySelector","Modal","ReactDOM","createPortal","TodoForm","newTodoValue","setNewTodoValue","onSubmit","preventDefault","type","Skeleton","speed","width","height","viewBox","backgroundColor","foregroundColor","AppUI","Fragment","map","onComplete","App","render"],"mappings":"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","file":"static/js/main.2755342b.chunk.js","sourcesContent":["import React from 'react';\nimport {useLocalStorage} from './useLocalStorage';\n\nconst TodoContex = React.createContext();\n\nfunction TodoProvider(props) {\n\n   const {\n      item: todos,\n      saveItem: saveTodos,\n      loading,\n      error,\n   } = useLocalStorage('TODOS_V1', []);\n   \n   const [searchValue, setSearchValue] = React.useState('');\n   const [openModal, setOpenModal] = React.useState(false);\n\n   const completedTodos = todos.filter(todo => !!todo.completed).length;\n   const totalTodos = todos.length;\n\n   let searchedTodos = [];\n   if (!searchValue.length >= 1) {\n      searchedTodos = todos;\n   } else {\n      searchedTodos = todos.filter(todo => {\n         const todoText = todo.text.toLowerCase();\n         const searchText = searchValue.toLowerCase();\n         return todoText.includes(searchText);\n      })\n   }\n\n   const addTodo = (text) => {\n      if (text === '') {return};\n      const newTodos = [...todos];\n      newTodos.push({\n         completed: false,\n         text,\n      })\n      saveTodos(newTodos);\n   }\n\n   const completeTodo = (text) => {\n      const todoIndex = todos.findIndex(todo => todo.text === text);\n      const newTodos = [...todos];\n      newTodos[todoIndex].completed = true;\n      saveTodos(newTodos);\n   }\n\n   const toggleComplete = (text) => {\n      const todoIndex = todos.findIndex(todo => todo.text === text);\n      const newTodos = [...todos];\n      newTodos[todoIndex].completed = !newTodos[todoIndex].completed;\n      saveTodos(newTodos);\n   }\n\n   const deleteTodo = (text) => {\n      const todoIndex = todos.findIndex(todo => todo.text === text);\n      const newTodos = [...todos];\n      newTodos.splice(todoIndex, 1);\n      saveTodos(newTodos);\n   }\n\n   return (\n      <TodoContex.Provider value={{\n         loading,\n         error,\n         totalTodos,\n         completedTodos,\n         searchValue,\n         setSearchValue,\n         searchedTodos,\n         completeTodo,\n         deleteTodo,\n         openModal,\n         setOpenModal,\n         addTodo,\n         toggleComplete,\n      }} >\n         {props.children}\n      </TodoContex.Provider >\n   );\n}\n\nexport {TodoContex, TodoProvider};\n","import React from 'react';\n\nfunction useLocalStorage(itemName, initialValue) {\n   const [error, setError] = React.useState(false)\n   const [loading, setLoading] = React.useState(true);\n   const [item, setItem] = React.useState(initialValue);\n\n   React.useEffect(() => {\n      setTimeout(() => {\n         try {\n\n            const localStorageItem = localStorage.getItem(itemName);\n            let parsedItem;\n            if (!localStorageItem) {\n               localStorage.setItem(itemName, JSON.stringify(initialValue));\n               parsedItem = initialValue;\n            } else {\n               parsedItem = JSON.parse(localStorageItem);\n            }\n\n            setItem(parsedItem);\n            setLoading(false);\n         } catch (error) {\n            setError(error);\n         }\n      }, 1000)\n   }, []);\n\n   const saveItem = (newItem) => {\n      try {\n         const stringifiedItem = JSON.stringify(newItem);\n         localStorage.setItem(itemName, stringifiedItem);\n         setItem(newItem);\n      } catch (error) {\n         setError(error);\n      }\n   };\n\n   return {\n      item,\n      saveItem,\n      loading,\n      error,\n   };\n}\n\nexport { useLocalStorage };\n","import React from 'react';\nimport { TodoContex } from '../../TodoContex';\nimport '../../styles/index.css';\n\nfunction TodoCounter() {\n   const {totalTodos, completedTodos} = React.useContext(TodoContex);\n   return (\n      <h2 className=\"todo-counter\">Has completado {completedTodos} de {totalTodos} TODOs</h2>\n   );\n}\n\nexport {TodoCounter};\n","import React from 'react';\nimport { TodoContex } from '../../TodoContex';\nimport '../../styles/index.css';\n\nfunction TodoSearch() {\n   const {\n      searchValue,\n      setSearchValue,\n   } = React.useContext(TodoContex);\n\n   const onSearchValueChange = (event) => {\n      console.log(event.target.value);\n      setSearchValue(event.target.value);\n   };\n\n   return (\n      <input\n         className=\"search\"\n         placeholder=\"Buscar...\"\n         value={searchValue}\n         onChange={onSearchValueChange}\n      />\n   );\n}\n\nexport {TodoSearch};\n","import React from 'react';\nimport '../../styles/index.css';\n\nfunction TodoList(props) {\n   return (\n      <section className=\"todo-container\">\n         {props.children}\n      </section>\n   );\n}\n\nexport {TodoList};\n","import React from 'react';\nimport '../../styles/index.css';\nimport {FaTrashAlt} from 'react-icons/fa';\n\nfunction TodoItem(props) {\n   return (\n      <li className={'todo'}>\n         <p\n            onClick={props.toggleComplete}\n            className={`todo__text ${props.completed && 'todo__text--completed'}`}\n         >\n            {props.text}\n         </p>\n         <span\n            className={'todo__icon'}\n            onClick={props.onDelete}\n         >\n            <FaTrashAlt fill=\"#fff\" fontSize=\"3.5rem\" />\n         </span>\n      </li>\n   );\n}\n\nexport {TodoItem};\n","import React from 'react';\nimport '../../styles/index.css';\nimport {RiAddFill} from 'react-icons/ri';\n\nfunction CreateTodoButton(props) {\n\n   const onClickButton = () => {\n      props.setOpenModal(prevState => !prevState);\n      document.getElementById('modal').classList.toggle('modal--show');\n      document.querySelector('.button').classList.toggle('button--modal');\n      document.querySelector('#root').classList.toggle('blur');\n   }\n\n   return (\n      <button\n         className=\"button\"\n         onClick={() => onClickButton()}\n      >\n         <RiAddFill fill=\"#fff\" fontSize=\"4rem\"/>\n      </button>\n   );\n}\n\nexport {CreateTodoButton};\n","import React from 'react';\nimport ReactDOM from 'react-dom';\n\nfunction Modal({children}) {\n   return ReactDOM.createPortal(\n      <div>\n         {children}\n      </div>,\n      document.getElementById('modal')\n   );\n}\n\nexport {Modal};\n","import React from 'react';\nimport {TodoContex} from '../../TodoContex';\n\nfunction TodoForm() {\n\n   const [newTodoValue, setNewTodoValue] = React.useState('');\n   const {\n      addTodo,\n      setOpenModal,\n   } = React.useContext(TodoContex);\n\n   const onChange = (event) => {\n      setNewTodoValue(event.target.value);\n   };\n   const onCancel = () => {\n      document.getElementById('modal').classList.toggle('modal--show');\n      document.querySelector('.button').classList.toggle('button--modal');\n      document.querySelector('#root').classList.toggle('blur');\n      setOpenModal(false);\n   };\n   const onSubmit = (event) => {\n      event.preventDefault();\n      addTodo(newTodoValue);\n      document.getElementById('modal').classList.toggle('modal--show');\n      document.querySelector('.button').classList.toggle('button--modal');\n      document.querySelector('#root').classList.toggle('blur');\n      setOpenModal(false);\n   };\n   return (\n      <form className=\"modal\" onSubmit={onSubmit}>\n         <label>Añade un nuevo ToDo</label>\n         <textarea className=\"modal__textarea\" placeholder=\"Descripcion de tu ToDo\" value={newTodoValue} onChange={onChange}/>\n         \n         <div className=\"modal__buttons\" >\n            <button className=\"modal__buttons__button\" onClick={onCancel}>Cancelar</button>\n            <button className=\"modal__buttons__button\" type=\"submit\">Crear</button>\n         </div>\n      </form>\n   );\n}\n\nexport {TodoForm};\n","import React from 'react';\nimport ContentLoader from 'react-content-loader';\n\nfunction Skeleton(props) {\n   return (\n      <ContentLoader\n         className=\"skeleton\"\n         speed={1}\n         width={300}\n         height={100}\n         viewBox=\"0 0 300 100\"\n         backgroundColor=\"#00A8CC\"\n         foregroundColor=\"#33cccc\"\n         {...props}\n      >\n         <rect className=\"skeleton-item\" className=\"\" rx=\"20\" ry=\"20\" width=\"300\" height=\"100\" />\n         <rect className=\"skeleton-item\" className=\"\" rx=\"20\" ry=\"20\" width=\"300\" height=\"100\" />\n      </ContentLoader>\n   );\n}\n\nexport {Skeleton};\n","import React from 'react';\nimport {TodoContex} from '../TodoContex';\nimport {TodoCounter} from '../components/TodoCounter';\nimport {TodoSearch} from '../components/TodoSearch';\nimport {TodoList} from '../components/TodoList';\nimport {TodoItem} from '../components/TodoItem';\nimport {CreateTodoButton} from '../components/CreateTodoButton';\nimport {Modal} from '../Modal';\nimport {TodoForm} from '../components/TodoForm';\nimport {Skeleton} from './skeleton';\n\nfunction AppUI() {\n   const {\n      error,\n      loading,\n      searchedTodos,\n      completeTodo,\n      deleteTodo,\n      openModal,\n      setOpenModal,\n      toggleComplete,\n   } = React.useContext(TodoContex);\n\n   return (\n      <React.Fragment>\n         <TodoCounter />\n         <TodoSearch />\n\n         <TodoList>\n            {error && <p>Desespérate, hubo un error...</p>}\n            {loading && <Skeleton/>}\n            {(!loading && !searchedTodos.length) && <p>¡Crea tu primer TODO!</p>}\n\n            {searchedTodos.map(todo => (\n               <TodoItem\n                  key={todo.text}\n                  text={todo.text}\n                  completed={todo.completed}\n                  onComplete={() => completeTodo(todo.text)}\n                  onDelete={() => deleteTodo(todo.text)}\n                  toggleComplete={() => {toggleComplete(todo.text)}}\n               />\n            ))}\n         </TodoList>\n\n         {!!openModal && (\n            <Modal>\n               <TodoForm />\n            </Modal>\n         )}\n\n\n         <CreateTodoButton setOpenModal={setOpenModal} />\n      </React.Fragment>\n   );\n}\n\nexport { AppUI };\n","import React from 'react';\nimport { TodoProvider } from '../TodoContex';\nimport { AppUI } from './AppUI';\n\nfunction App() {\n  return (\n    <TodoProvider>\n      <AppUI />\n    </TodoProvider>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App/index';\n\nReactDOM.render(\n   <App />,\n   document.getElementById('root')\n);\n\n"],"sourceRoot":""}